using CG.CqrsCrud.Attributes.Commons;
using CG.CqrsCrud.Attributes.MediatorAttributes;
using CG.CqrsCrud.Attributes.MediatorAttributes.Commands;
using CG.CqrsCrud.Attributes.MediatorAttributes.Queries;
using System.Reflection;

namespace CG.Domain.Entities
{
    [GetMediator]
    [GetListMediator]
    [AddMediator]
    [DeleteMediator]
    [UpdateMediator]
    public class User : Entity<int>
    {
        [PrimaryKeyAttribute]
        [AutoGeneratedPrimaryKey]
        public Guid UserId { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public bool IsActive { get; set; }
        public bool IsSuperAdmin { get; set; }

        public string? EmployeeId { get; set; }
        public string? Designation { get; set; }
        public string? Gender { get; set; }
        public string? DateOfBirth { get; set; }
        public string? PresentHouseName { get; set; }
        public string? PresentCity { get; set; }
        public string? PresentPost { get; set; }
        public string? PresentDistrict { get; set; }
        public string? PresentState { get; set; }
        public string? PresentPin { get; set; }
        public string? PermenantHouseName { get; set; }
        public string? PermenantCity { get; set; }
        public string? PermenantPost { get; set; }
        public string? PermenantDistrict { get; set; }
        public string? PermenantState { get; set; }
        public string? PermenantPin { get; set; }
        public string? BloodGroup { get; set; }
        public string? Phone { get; set; }
        public string? PersonalEmail { get; set; }
        public string? Location { get; set; }
        public string? IdProof { get; set; }
        public string? Pan { get; set; }
        public string? OfferDate { get; set; }
        public string? JoiningDate { get; set; }
        public string? ConfirmationDate { get; set; }

        public int? UserRoleId { get; set; }
    }
}